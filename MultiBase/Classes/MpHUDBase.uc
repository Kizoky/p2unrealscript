///////////////////////////////////////////////////////////////////////////////
// MpHUDBase.uc
// Copyright 2023 Running With Scissors Studios LLC.  All Rights Reserved.
//
// Basic skeleton for our multiplayer HUD.
//
///////////////////////////////////////////////////////////////////////////////
class MpHUDBase extends P2HUD
	config;


///////////////////////////////////////////////////////////////////////////////
// Vars, structs, consts, enums...
///////////////////////////////////////////////////////////////////////////////

var private MatchIntro			MyMatchIntro;			// Match intro to use


///////////////////////////////////////////////////////////////////////////////
// Start the match intro.
///////////////////////////////////////////////////////////////////////////////
simulated function StartMatchIntro(class<MatchIntro> MatchIntroClass)
{
	if (MatchIntroClass != None)
	{
		MyMatchIntro = Spawn(MatchIntroClass, PlayerOwner);
		if (MyMatchIntro != None)
			MyMatchIntro.Start();
	}
}

///////////////////////////////////////////////////////////////////////////////
// End the match intro.
///////////////////////////////////////////////////////////////////////////////
simulated function EndMatchIntro()
{
	if (MyMatchIntro != None)
	{
		MyMatchIntro.End();
		MyMatchIntro = None;
		if ((MpPlayer(PlayerOwner) != None) && !MpPlayer(PlayerOwner).bPendingDelete)
			MpPlayer(PlayerOwner).ServerIntroFinished();
	}
}

///////////////////////////////////////////////////////////////////////////////
// Check whether the match intro can end
///////////////////////////////////////////////////////////////////////////////
simulated function bool CanMatchIntroEnd()
{
	if (MyMatchIntro != None)
		return MyMatchIntro.CanEnd();
	return true;
}

///////////////////////////////////////////////////////////////////////////////
// Check whether the match intro is running.
///////////////////////////////////////////////////////////////////////////////
simulated function bool IsMatchIntroRunning()
{
	if (MyMatchIntro != None)
		return MyMatchIntro.IsRunning();
	return false;
}

///////////////////////////////////////////////////////////////////////////////
// Update match intro
///////////////////////////////////////////////////////////////////////////////
simulated function UpdateMatchIntro(Canvas Canvas)
{
	if (MyMatchIntro != None)
		MyMatchIntro.Update(Canvas);
}


///////////////////////////////////////////////////////////////////////////////
// Default properties
///////////////////////////////////////////////////////////////////////////////
defaultproperties
{
}
