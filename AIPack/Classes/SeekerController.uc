///////////////////////////////////////////////////////////////////////////////
// SeekerController
// Copyright 2002 RWS, Inc.  All Rights Reserved.
//
//
// Debug character who follows the player anywhere
//
///////////////////////////////////////////////////////////////////////////////
class SeekerController extends BystanderController;

///////////////////////////////////////////////////////////////////////////////
// Vars
///////////////////////////////////////////////////////////////////////////////
// User set vars

// Internal vars

///////////////////////////////////////////////////////////////////////////////
// Const
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// Decide what to do next
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
state Thinking
{
Begin:

TryAgain:
	Sleep(5*FRand());

//	if(!bPreparingMove)
//	{
		// walk to some random place I can see (not through walls)
		SetNextState('Thinking');
		//if(!PickRandomDest())
//			Goto('TryAgain');	// Didn't find a valid point, try again

		SetEndGoal(GetRandomPlayer().MyPawn, DEFAULT_END_RADIUS);
		GotoStateSave('RunToTarget');
//	}
}

defaultproperties
{
}