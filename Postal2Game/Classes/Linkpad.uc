///////////////////////////////////////////////////////////////////////////////
// Telepad.
// Copyright 2001 Running With Scissors, Inc.  All Rights Reserved.
//
// Telepad that can only be linked to, to make it teleport things. A Telepad
// has to initiate the transfer for this.
//
///////////////////////////////////////////////////////////////////////////////
//
// When linking to another level use this format for the URL:
//
//		NextLevelName#TelepadInThereTag1?peer
//
///////////////////////////////////////////////////////////////////////////////
class Linkpad extends Telepad;


///////////////////////////////////////////////////////////////////////////////
// Vars, structs, consts, enums...

///////////////////////////////////////////////////////////////////////////////
// Linkpads cannot be touched in a conventional manner.. they are driven by 
// their linking telepad/linkpad.
///////////////////////////////////////////////////////////////////////////////
simulated function Touch( actor Other )
{
	// STUB--do not fill in
}

///////////////////////////////////////////////////////////////////////////////
// Save any nearby pawns so they'll travel with the player to the next level.
//
// Send you're linked neighbor first.
///////////////////////////////////////////////////////////////////////////////
function SaveNearbyPawns(P2Pawn PlayerPawn, float UseRadius, vector UseLoc)
{
	if(MyLinkpad != None)
		MyLinkpad.SaveNearbyPawns(PlayerPawn, MyLinkpad.CollisionRadius, MyLinkpad.Location);

	Super.SaveNearbyPawns(PlayerPawn, UseRadius, UseLoc);
}

///////////////////////////////////////////////////////////////////////////////
// Default properties
///////////////////////////////////////////////////////////////////////////////
defaultproperties
{
	Texture=Texture'PostEd.Icons_256.Linkpad'
	DrawScale=0.125
}
