///////////////////////////////////////////////////////////////////////////////
// FlavinPickup
// Copyright 2003 Running With Scissors, Inc.  All Rights Reserved.
//
//	Thing that's picked up in MP GrabBag games to give you super powers.
// 
///////////////////////////////////////////////////////////////////////////////

class FlavinPickup extends OwnedPickup;

var float           MaxDropTime;	// how long it can be dropped before returning
var bool			bDropped;

const CHANGE_SCALE = 0.1;

///////////////////////////////////////////////////////////////////////////////
// Destroy all flavin pickups when not playing grabbag
///////////////////////////////////////////////////////////////////////////////
simulated function PreBeginPlay()
{
	if(Level.Game != None
		&& GrabBagGame(Level.Game) == None)
		Destroy();
	else
		Super.PreBeginPlay();
}

///////////////////////////////////////////////////////////////////////////////
// Bots want these a lot
///////////////////////////////////////////////////////////////////////////////
function float BotDesireability( pawn Bot )
{
	local float desire;

	return MaxDesireability;
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
function SetRespawn()
{
	if( !bDropped )
		GotoState('Sleeping');
	else
		Destroy();
}

///////////////////////////////////////////////////////////////////////////////
// If we need to go back to an original pickup spot, find one and return us
// there. Put as many as we need back in appropriate places--don't put them
// all back in one spot.
// This can only send ONE home at once...
///////////////////////////////////////////////////////////////////////////////
function SendHome()
{
	local FlavinPickup fp;
	local int i;
	local bool bFoundHome;

	foreach DynamicActors(class'FlavinPickup', fp)
	{
		if(!fp.bDropped
			&& fp.IsInState('Sleeping'))
		{
			fp.GotoState('Pickup');
			AmountToAdd = AmountToAdd - 1;
			bFoundHome=true;
			break;
		}
	}

	if(bFoundHome)
	{
		Destroy();
	}
	else
		warn(self$" could not find home for me, with "$AmountToAdd$" left.");
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
event FellOutOfWorld()
{
	SendHome();
}

///////////////////////////////////////////////////////////////////////////////
// Make sure the amount we had carries over
///////////////////////////////////////////////////////////////////////////////
function InitDroppedPickupFor(Inventory Inv)
{
	bDropped=true;
	Super.InitDroppedPickupFor(Inv);
	SetDrawScale(default.DrawScale + ((AmountToAdd-1)*CHANGE_SCALE));
	bAlwaysRelevant = true;
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
State Pickup
{
	///////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////
	function Timer()
	{
		SendHome();
	}

	function BeginState()
	{
		if(bDropped)
			SetTimer(MaxDropTime, false);
	}
}

///////////////////////////////////////////////////////////////////////////////
// Sleep forever, until you get warped back to though, by a Send Home
///////////////////////////////////////////////////////////////////////////////
State Sleeping
{
Begin:
}

///////////////////////////////////////////////////////////////////////////////
// Default properties
///////////////////////////////////////////////////////////////////////////////
defaultproperties
	{
	InventoryType=class'FlavinInv'
	PickupMessage="You picked up a BAG!"
	DrawType=DT_StaticMesh
	StaticMesh=StaticMesh'MpMeshes.misc.money_bag_mp'
//	mp_misc.money_bag_mp.money_bag_mp_bloody
	bAllowMovement=false
    RespawnTime=0.0	// these don't respawn--there's a fixed number in the level -- even in MP
	MaxDropTime=30.0
	RemoteRole=ROLE_SimulatedProxy
	bNetTemporary=false
	bUpdateSimulatedPosition=true
	//bOnlyReplicateHidden = false
	DrawScale=0.5
	MaxDesireability = 0.8
	CollisionHeight=20.000000
	}
