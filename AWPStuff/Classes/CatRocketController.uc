///////////////////////////////////////////////////////////////////////////////
// Dervish Cat Rocket Controller
//
// Ensures that the cat screams while falling, then start dervishing forever
///////////////////////////////////////////////////////////////////////////////
class CatRocketController extends AWCatController;

///////////////////////////////////////////////////////////////////////////////
// FallingStartDervishRocket
// Play screeching sound while falling.
///////////////////////////////////////////////////////////////////////////////
state FallingStartDervishRocket extends FallingDervish
{
	///////////////////////////////////////////////////////////////////////////////
	// Attack those you touch now
	///////////////////////////////////////////////////////////////////////////////
	event Touch(actor Other)
	{
		if (FPSPawn(Other) != None)
			DervishThisPawn(FPSPawn(Other));
		else
			Super.Touch(Other);
	}

	///////////////////////////////////////////////////////////////////////////////
	// I've fallen to the ground
	///////////////////////////////////////////////////////////////////////////////
	function bool NotifyLanded(vector HitNormal)
	{
		log(Self$" landed ");
		TurnOnDervish();
		return true;
	}
	///////////////////////////////////////////////////////////////////////////////
	// I've fallen to the ground, start dervish
	///////////////////////////////////////////////////////////////////////////////
	function Landed(vector HitNormal)
	{
		log(Self$" landed ");
		TurnOnDervish();
	}
	///////////////////////////////////////////////////////////////////////////////
	// Make us flail our legs
	///////////////////////////////////////////////////////////////////////////////
	function BeginState()
	{
		PrintThisState();

		MyPawn.SetPhysics(PHYS_FALLING);

		MyPawn.PlayThrownSound();

		MyPawn.PlayFalling();
	}
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// Coming out of dervish,
// allow them to be picked up, but not much else
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
state DervishFinish
{
	///////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////
	function BeginState()
	{
		TurnOffDervish();
		//Pawn.ChunkUp(0);
	}
}

///////////////////////////////////////////////////////////////////////////////
// Stop the whirling dervish
///////////////////////////////////////////////////////////////////////////////
function TurnOffDervish(optional bool bDontSetState)
{
	if(bDervish)
	{
		// Throw precious limb if we still have one
		ThrowPrecious();
		
		CatPawn(MyPawn).TurnOffDervish();
		SetAttacker(None);
		SecondaryEndRadius = default.SecondaryEndRadius;
		if(!bDontSetState)
			GotoStateSave('DervishFinish');
		bDervish=false;
		
		Pawn.ChunkUp(0);
	}
}

defaultproperties
{
}
