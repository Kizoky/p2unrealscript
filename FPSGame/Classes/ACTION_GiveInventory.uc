///////////////////////////////////////////////////////////////////////////////
// ACTION_GiveInventory
// Gives a specified inventory item.
///////////////////////////////////////////////////////////////////////////////
class ACTION_GiveInventory extends ScriptedAction;

///////////////////////////////////////////////////////////////////////////////
// Public vars
///////////////////////////////////////////////////////////////////////////////
var(Action) class<Inventory> InvType;	// Class of inventory to give
var(Action) bool bIgnoreDifficulty;		// If true, ignores any difficulty flags that might change the item given (such as Liebermode)

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
function bool InitActionFor(ScriptedController C)
{
	local FPSPawn P;
	local Inventory ThisInv;

	P = FPSPawn(C.Pawn);

	if (P != None && InvType != None)
		P.CreateInventoryByClass(InvType,,bIgnoreDifficulty);

	return false;
}

function string GetActionString()
	{
		return ActionString@InvType;
	}

///////////////////////////////////////////////////////////////////////////////
// Default properties
///////////////////////////////////////////////////////////////////////////////
defaultproperties
{
	ActionString="Give inventory"
	bIgnoreDifficulty=false
}
