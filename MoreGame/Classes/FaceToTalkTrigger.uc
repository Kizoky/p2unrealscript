///////////////////////////////////////////////////////////////////////////////
// FaceToTalkTrigger
// Thing activated that only causes
// the dude to say something if he's aiming pretty much at the center of this
// thing
///////////////////////////////////////////////////////////////////////////////
class FaceToTalkTrigger extends Trigger;

///////////////////////////////////////////////////////////////////////////////
// vars
///////////////////////////////////////////////////////////////////////////////
var ()float CanSeeViewCone;		// Tightness of view cone 0.1 is very tight, 1 is very wide
var ()Sound SoundToPlay;		// Say exactly this when you see this trigger


///////////////////////////////////////////////////////////////////////////////
// Player is the only one who can activate these triggers
///////////////////////////////////////////////////////////////////////////////
function bool IsRelevant(actor Other)
{
	local P2Player p2p;

	if(P2Pawn(Other) != None)
	{
		p2p = P2Player(P2Pawn(Other).Controller);
		if(p2p != None)
		{
			return !P2GameInfoSingle(Level.Game).ErrandIgnoreThisTag(self);
		}
	}

	return false;
}

///////////////////////////////////////////////////////////////////////////////
// Called when something touches the trigger.
///////////////////////////////////////////////////////////////////////////////
function Touch( actor Other )
{
	//Super.Touch(Other);
	// if it's who we want
	if( IsRelevant( Other ) )
	{
		TriggerActor=Other;
		// Then go to a state to wait till they are facing you
		GotoState('WaitForFacing');
	}
}

///////////////////////////////////////////////////////////////////////////////
// When something untouches the trigger.
///////////////////////////////////////////////////////////////////////////////
function UnTouch( actor Other )
{
	Super.UnTouch(Other);
	if( TriggerActor == Other)
		//IsRelevant( Other ) )
	{
		TriggerActor=None;
		// send you back to your normalstate
		GotoState('NormalTrigger');
	}
}

///////////////////////////////////////////////////////////////////////////////
// Say something after you see the trigger
///////////////////////////////////////////////////////////////////////////////
function SaySomething()
{
	TriggerEvent(Event, self, Pawn(TriggerActor));
	TriggerActor.PlaySound(SoundToPlay, SLOT_Talk);
	TriggerActor = None;
	GotoState('NormalTrigger');

	if( bTriggerOnceOnly )
		// Ignore future touches.
		SetCollision(False);
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// Wait until the dude is facing this trigger, then make
// him say something
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
state WaitForFacing extends NormalTrigger
{
	ignores Touch;

	///////////////////////////////////////////////////////////////////////////////
	// Waiting for the last guy who intiated this, to face us
	///////////////////////////////////////////////////////////////////////////////
	function Tick(float DeltaTime)
	{
		if(TriggerActor != None)
		{
			if((Normal(Location - TriggerActor.Location) Dot vector(TriggerActor.Rotation))
				> CanSeeViewCone
				&& FastTrace(Location, TriggerActor.Location))
				SaySomething();
		}
	}
}

defaultproperties
{
	CanSeeViewCone = 0.5
	Texture=Texture'PostEd.Icons_256.FaceToTalkTrigger'
	DrawScale=0.25
}
