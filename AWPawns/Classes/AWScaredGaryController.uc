///////////////////////////////////////////////////////////////////////////////
// AWScaredGaryController
// Copyright 2004 RWS, Inc.  All Rights Reserved.
//
// Scared of the dude on sight, now, after his harrowing encounter with him before.
// 
///////////////////////////////////////////////////////////////////////////////
class AWScaredGaryController extends AWBystanderController;

///////////////////////////////////////////////////////////////////////////////
// Vars
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Const
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Run screaming from where you are
///////////////////////////////////////////////////////////////////////////////
function SetToPanic()
{
	DangerPos = MyPawn.Location;
	DangerPos.x += ((Rand(256)) - 128);
	DangerPos.y += ((Rand(256)) - 128);
	MyPawn.DropBoltons(MyPawn.Velocity);
	// Decide current safe min
	UseSafeRangeMin = 10*MyPawn.SafeRangeMin;
	InterestPawn = MyPawn;
	SetAttacker(MyPawn);
	SetNextState('FleeForever');
}

///////////////////////////////////////////////////////////////////////////////
// We've seen the pawn, now decide if we care
// If it's the dude--run!
///////////////////////////////////////////////////////////////////////////////
function ActOnPawnLooks(FPSPawn LookAtMe, optional out byte StateChange)
{
	if(AWDude(LookAtMe) != None)
	{
		SetAttacker(LookAtMe);
		DangerPos = Attacker.Location;
		MyPawn.DropBoltons(MyPawn.Velocity);
		// Decide current safe min
		UseSafeRangeMin = 10*MyPawn.SafeRangeMin;
		InterestPawn = Attacker;
		GotoStateSave('FleeForever');
		StateChange=1;
	}
	else
		Super.ActOnPawnLooks(LookAtMe, StateChange);
}

defaultproperties
{
}
